apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-backend
  namespace: healthcare
  labels:
    app: healthcare-backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: healthcare-backend
  template:
    metadata:
      labels:
        app: healthcare-backend
        version: v1
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/healthcare-saas/backend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: backend-config
      initContainers:
      - name: migration
        image: ghcr.io/your-org/healthcare-saas/backend:latest
        command: ["npm", "run", "migrate:up"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-frontend
  namespace: healthcare
  labels:
    app: healthcare-frontend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthcare-frontend
  template:
    metadata:
      labels:
        app: healthcare-frontend
        version: v1
    spec:
      containers:
      - name: frontend
        image: ghcr.io/your-org/healthcare-saas/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-backend-service
  namespace: healthcare
spec:
  selector:
    app: healthcare-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-frontend-service
  namespace: healthcare
spec:
  selector:
    app: healthcare-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthcare-ingress
  namespace: healthcare
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.healthcare-saas.com
    - app.healthcare-saas.com
    secretName: healthcare-tls
  rules:
  - host: api.healthcare-saas.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: healthcare-backend-service
            port:
              number: 80
  - host: app.healthcare-saas.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: healthcare-frontend-service
            port:
              number: 80
